* 0.3.1
- added build for OS X 10.5 Leopard
- added build for components: builtin.swc, clib.swc and redtamarin.swc
- removed debugger() from avmplus.* package
- removed Capabilities class from flash.system.* package (will be re-added in avmglue)
- removed getTimer() from toplevel (will be re-added in avmglue)
- fixed System.exec() - issue 30
  was not declared as static
- added avmplus.profiles.* with Profile, TamarinProfile, RedTamarinProfile, etc.
- added System.profile
- fixed FileSystem.exists - issue 28
  no we use access( filename, F_OK ) == 0
  instead of a native impl.
- fixed small memory leak in sockets - issue 29
  every 'new' need a 'delete' even on the heap
- avmglue v1 is available on its own repo
- added System.eval()

* 0.3.0
- created C.socket AS3 for C socket const (POSIX only, eg. AF_INET, SOCK_STREAM, etc.)
- added error const for sockets in C.errno.* AS3 (POSIX only eg. ENOTCONN, ECONNREFUSED etc.)
- created CSocketClass
- created Socket, PosixSocket
- added socket methods to Platform, PosixPartialPlatform
- created SocketClass and avmplus.Socket AS3
- documentation
- port to WIN32 impl of WinSocket
  SOCKET are casted as int
  small changes
- added gethostbyaddr() and gethostbyname()
- forced to use a VMPI_gethostbyaddr() for some small difference between POSIX and WIN32
- sync with tamarin-redux tip d8b78be5b40f (22/12/2010)
- better integration of redtamarin features
   /VMPI/VMPI.h  -> original Tamarin
   /VMPI/VMPI2.h -> redtamarin extensions
   /platform/mac/mac-platform.h  -> original Tamarin
   /platform/mac/mac-platform2.h -> redtamarin extensions
   /VMPI/PosixPortUtils.cpp  -> original Tamarin
   /VMPI/PosixPortUtils2.cpp -> redtamarin extensions
   etc.
- added chdir() and unlink()
- re-integrated all of clib, tested only on OSX
- changed some logic in ShellCore and avmshell
  now when you embed your abc in a projector
  you don't need to use -- before passing your arguments
- System API now have a programFilename getter that returns argv[0]
  System.executablePath and VMPI_getExecutablePath removed
- re-integrated all of clib for WIN32 and tested
- fixed VMPI_realpath for WIN32
- re-integrated all of clib for UNIX and tested
- re-integrated all OperatingSystem
- re-integrated all FileSystem
- changed and moved System, now it's more redtamarin centric
  eg. we add what we need for our API
- a lot of work on FileSystem added: currentDirectory, parentDirectory,
  extensionSeparator, drives, lineEnding, separators, getFileSize(),
  getLastModifiedTime(), getBasenameFromPath(), getDirectoryFromPath(),
  getExtension(), hasDriveLetter(), isEmptyDirectory(), isSeparator(),
  isNotDotOrDotdot(), listFilesWithFilter(), listFilesWithRegexp(),
  remove(), removeFile(), removeDirectory(), stripTrailingSeparators()
- added beta features to read/write binary to stdin/stdout
  stdinLength, isStdinEmpty(), stdinRead(), stdinReadAll(), stdoutWrite()
- added more functions to FileSystem: isAbsolutePath(), absolutePath(),
  containsPath(), copyFile(), copyFiles(), createDirectory(),
  endsWithSeparator(), ensureEndsWithSeparator(), normalizePath(), etc.
- added system locale detection
  OperatingSystem.language, OperatingSystem.country,
  OperatingSystem.locale, OperatingSystem.codePage
- added C.unistd getpid() and System.pid
- added FileSystem.homeDirectory and FileSystem.rootDirectory
- added System.shell and System.popen()
- added Socket.localAddresses
- added getpeername(), getsockname() in C.socket.*
- added socket instance "local" and "peer" property
  to get the "address:port" on connected sockets
- refactored receiveFrom and sendTo with real implementation of recvfrom() and sento()
- refactored Socket, now everything use ByteArray on the C++ side
  methods using String on the AS3 side use readUTFBytes()
- Socket.binnd() can define the interface where to bind
  (before was hard coded "127.0.0.1")
- now receive functions can define a custom buffer
  receive() default buffer is 1024
  receiveFrom() default buffer is 512
- added utility methods receiveAll() etc.
- the AS3 Socket class is now dynamic
  and have callback functions for all methods
  eg. connect() -> onConnect(), bind() -> onBind()
  those callbacks can be overrided by the user
  eg. mysock.onBind = function() { //do whatever }
- added readable/writable properties to Socket
  they reuse a non-blocking select() in the background
- added Socket.maxConnectionQueue and Socket.maxConcurrentConnection
- fixed a memory bug with Socket where the buffer was GC'ed and crashed (added a write barrier)
- fixed a bug with send() etc., needed to null terminate the ByteArray data
- "hacked" FD_SETSIZE to change the limit of concurrent connections to 4096 :p
  FD_SETSIZE is limited to 1024 under OS X (maybe the same for Ubuntu?)
  and limited to 64 under Windows
- removed INADDR_ANY and INADDR_BROADCAST in C.socket.*
- added MSG_DONTWAIT in C.socket.*
- added SetNoSigPipe() to socket.h
  now by default we desactivate SIGPIPE
- fixed bugs in receiveAll() and receiveBinaryAll()

* 0.2.9
- added VMPI_chmod
- updated VMPI_getFileMode for WIN32
- added dirent.h implementation for WIN32
- added listFiles() in avmplus.FileSystem AS3
- added VMPI_getOperatingSystem* VMPI_isNullTerminated, VMPI_int2char
- added avmplus.OperatingSystem AS3
- added VMPI_gethostname, VMPI_getUserName
- added gethostname() and getlogin() in C.unistd.* AS3
- full Operating System informations (name, nodename, username, hostname, release, version, machine,
  vendor, vendorName, vendorVersion, vendorDescription, codeName)
- added VMPI_sleep POSIX
- added sleep() in C.unistd.* AS3 (POSIX only)
- added VMPI_getDiskSpace, VMPI_getTotalDiskSpace
- added getFreeDiskSpace(), getTotalDiskSpace(), getUsedDiskSpace() in avmplus.FileSystem AS3

* 0.2.8
- added VMPI_rmdir, VMPI_mkdir, VMPI_remove, VMPI_rename
- added C.stdio in AS3 and StdioClass in C/C++
- added VMPI_realpath POSIX use realpath(), WIN32 use GetFullPathNameA()
- added rmdir() mkdir() in C.unistd.*
- added remove() rename() in C.stdio.*
- added realpath() in C.stdlib.*
- added S_IFMT, S_IFIFO, ... S_RWXU, S_IRUSR, etc. to C.unistd.*
- added VMPI_getFileMode, VMPI_isRegularFile, VMPI_isDirectory (POSIX)
- added getFileMode() isRegularFile() isDirectory() in avmplus.FileSystem AS3
- added strmode() in C.string.* AS3

* 0.2.7
- added VMPI_access, VMPI_getcwd, VMPI_setenv, VMPI_unsetenv
- added C.string, C.errno in AS3 and CStringClass, CerrnoClass in C/C++
- all tested under OS X 10.6 / Windows XP SP2 / Ubuntu 8.04

* 0.2.6
- reorganized everything
- tamarin-redux is sync'ed on redshell repo
- our /tamarin-redux is updated from a redshell hg archive
- now we use gclient on top of svn
- /trunk contains only redtamarin changes
  mainly: extensions, platform, shell, VMPI
- added VMPI_getExecutablePath to replace argv[0]
- added System.executablePath in avmplus.* AS3

* 0.2.5
- added System.executablePath to get argv[0]
- added locale/language/languages support
  user can override the default locale
  with env vars LC_ALL and/or LANG
- added full flash platform API mock

